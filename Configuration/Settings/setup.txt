
// Page that contains the formhandler subscription plugin for handling ajax requests.
tx_formhandler_subscription_ajax_subscribe = PAGE
tx_formhandler_subscription_ajax_subscribe {
	typeNum = 254447653
	config.disableAllHeaderCode = 1
	10 < plugin.tx_formhandler_pi1
	10.usePredef = formhandler_subscription_request_subscription_ajax.
	10.controller = Tx_FormhandlerSubscription_Controller_AjaxSubmitController
}

plugin.Tx_Formhandler.settings.predef {


	formhandler_subscription_request_subscription {

		formValuesPrefix = tx_formhandler_subscription

		langFile.1 = {$plugin.formhandler_subscription.globalLanguageFile}

		addErrorAnchors = 0

		singleErrorTemplate {
			totalWrap = <strong class="message">|</strong>
			singleWrap = |<br />
		}

		isErrorMarker {
			default = error
			global (
				<div class="error">
					<strong>###LLL:global_error_header###</strong><br />
					###LLL:global_error_message###
				</div><br />
			)
		}

	}

	formhandler_subscription_request_subscription_ajax < .formhandler_subscription_request_subscription
	formhandler_subscription_confirm_subscription < .formhandler_subscription_request_subscription
	formhandler_subscription_request_update < .formhandler_subscription_request_subscription
	formhandler_subscription_update_subscription < .formhandler_subscription_request_subscription
	formhandler_subscription_remove_subscription < .formhandler_subscription_request_subscription


	formhandler_subscription_request_subscription {

		name = Subscription request form

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/RequestSubscription.html

		validators {
			1.class = Tx_Formhandler_Validator_Default
			1.config.fieldConf {
				gender.errorCheck.1 = required
				first_name.errorCheck.1 = required
				last_name.errorCheck.1 = required
				email.errorCheck.1 = required
				email.errorCheck.2 = email
			}
		}

		finishers {

			1.class = Tx\FormhandlerSubscription\Finisher\Subscribe
			1.config {

				subscribersTable = {$plugin.formhandler_subscription.subscribersTable}

				checkConfirmedSelect.pidInList = {$plugin.formhandler_subscription.subscriberRecordsPID}
				checkConfirmedSelect.recursive = {$plugin.formhandler_subscription.subscriberRecordsRecursive}
				checkConfirmedSelect.markers.email.data = GP:tx_formhandler_subscription|email
				checkConfirmedSelect.where = email=###email###

				checkExistenceSelect < .checkConfirmedSelect
				checkExistenceSelect.showHidden = 1

				finishersNewSubscriber {

					10.class = Tx_Formhandler_Finisher_DB
					10.config {
						table = {$plugin.formhandler_subscription.subscribersTable}
						fields {
							gender.mapping = gender
							first_name.mapping = first_name
							last_name.mapping = last_name
							email.mapping = email
							hidden = 1
							pid = {$plugin.formhandler_subscription.newSubscriberRecordsPID}
						}
					}

					20.class = Tx\FormhandlerSubscription\Finisher\GenerateAuthCodeDB
					20.config {
						table = {$plugin.formhandler_subscription.subscribersTable}
						selectFields = uid,email
						authCodePage = {$plugin.formhandler_subscription.confirmSubscriptionPID}
						action = enableRecord
						generateTinyUrl = {$plugin.formhandler_subscription.generateTinyUrls}
					}

					30.class = Tx_Formhandler_Finisher_Mail
					30.config.mailer.class = Tx_Formhandler_Mailer_TYPO3Mailer
					30.config.view = Tx_FormhandlerSubscription_View_AuthCodeMail
					30.config.user {
						subject = TEXT
						subject.data = LLL:{$plugin.formhandler_subscription.globalLanguageFile}:request_subscription_email_user_subject
						sender_email = {$plugin.formhandler_subscription.emailSenderAddress}
						sender_name = {$plugin.formhandler_subscription.emailSenderName}
						to_name = TEXT
						to_name.value = {GP:tx_formhandler_subscription|first_name} {GP:tx_formhandler_subscription|last_name}
						to_name.insertData = 1
						to_email = TEXT
						to_email.value = {GP:tx_formhandler_subscription|email}
						to_email.insertData = 1
					}
				}

				// Unconfirmed subscribers get the same mail as new subscribers but no new record is added to the database.
				finishersExistingUnconfirmedSubscriber < .finishersNewSubscriber
				finishersExistingUnconfirmedSubscriber.10 >

				// Confirmed subscribers also get an email with an authcode but with a different link and a different text.
				finishersExistingConfirmedSubscriber < .finishersExistingUnconfirmedSubscriber
				finishersExistingConfirmedSubscriber.20.config {
					authCodePage = {$plugin.formhandler_subscription.updateSubscriptionFormPID}
					action = accessForm
				}
			}

			10.class = Tx_Formhandler_Finisher_Redirect
			10.config.redirectPage = {$plugin.formhandler_subscription.requestSubscriptionSuccessPID}
		}
	}

	formhandler_subscription_request_subscription_ajax < .formhandler_subscription_request_subscription
	formhandler_subscription_request_subscription_ajax.finishers.10 >

	formhandler_subscription_confirm_subscription {

		name = Subscription confirmation

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/RequestSubscription.html
		templateSuffix = _SUBSCRIPTION_CONFIRMED

		preProcessors.10.class = Tx\FormhandlerSubscription\PreProcessor\ValidateAuthCodeDB
		preProcessors.10.config {
			updateTimestampOnRecordActivation = {$plugin.formhandler_subscription.updateDatabaseTimestamps}
			errorRedirectPage = {$plugin.formhandler_subscription.authCodeInvalidPID}
		}
	}


	formhandler_subscription_request_update {

		name = Subscription update request

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/RequestUpdate.html

		validators {
			1.class = Tx_Formhandler_Validator_Default
			1.config.fieldConf {
				email.errorCheck.1 = required
				email.errorCheck.2 = email
			}
		}

		finishers {

			1 < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_request_subscription.finishers.1

			1.config {

				// New subscribers only get an email with a notice that they aren't subscribed, no database record is created, no auth code is generated.
				finishersNewSubscriber {
					10 >
					20 >
				}

				finishersExistingConfirmedSubscriber {
					30.config.user.subject.data = LLL:{$plugin.formhandler_subscription.globalLanguageFile}:request_update_email_user_subject
				}
			}

			10.class = Tx_Formhandler_Finisher_Redirect
			10.config.redirectPage = {$plugin.formhandler_subscription.requestUpdateSuccessPID}
		}
	}


	formhandler_subscription_update_subscription {

		name = Subscription update form

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/UpdateSubscription.html

		preProcessors.10 < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_confirm_subscription.preProcessors.10
		preProcessors.10.config.mergeRecordDataToGP = 1
		preProcessors.10.config.doNotInvalidateAuthCode = 1

		// Use the same validators as for the subscription request but remove the validation for the email since it can not be updated.
		validators < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_request_subscription.validators
		validators.1.config.fieldConf.email >

		finishers {

			// Make sure the submitted UID matches the one for which the used auth code was created.
			10.class = Tx\FormhandlerSubscription\Finisher\ValidateAuthCodeUID

			20.class = Tx_Formhandler_Finisher_DB
			20.config {
				table = {$plugin.formhandler_subscription.subscribersTable}
				updateInsteadOfInsert = 1
				key = uid
				fields {
					gender.mapping = gender
					first_name.mapping = first_name
					last_name.mapping = last_name
				}
			}

			30.class = Tx\FormhandlerSubscription\Finisher\InvalidateAuthCodeDB

			40.class = Tx_Formhandler_Finisher_Redirect
			40.config.redirectPage = {$plugin.formhandler_subscription.updateSubscriptionSuccessPID}
		}
	}

	formhandler_subscription_remove_subscription {

		name = Subscription removal

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/RemoveSubscription.html

		checkBoxFields = confirm_removal

		preProcessors.1.class = Tx_Formhandler_PreProcessor_LoadDefaultValues
		preProcessors.1.config.1.confirm_removal.defaultValue = 1

		preProcessors.10 < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_confirm_subscription.preProcessors.10
		preProcessors.10.config.doNotInvalidateAuthCode = 1

		validators {
			1.class = Tx_Formhandler_Validator_Default
			1.config.fieldConf {
				confirm_removal.errorCheck.1 = required
			}
		}

		finishers {

			10.class = Tx\FormhandlerSubscription\Finisher\RemoveAuthCodeRecord

			20.class = Tx_Formhandler_Finisher_Redirect
			20.config.redirectPage = {$plugin.formhandler_subscription.removeSubscriptionSuccessPID}
		}
	}

	// Configuration for an example form that updates related direct_mail categories.
	formhandler_subscription_request_subscription_directmailcategories < .formhandler_subscription_request_subscription
	formhandler_subscription_request_subscription_directmailcategories {

		name = Subscription request form - direct_mail categories

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/DirectMailCategories/RequestSubscription.html
		langFile.2 = EXT:formhandler_subscription/Resources/Language/DirectMailCategories.xml

		1.checkBoxFields = dmail_category

		// Make sure the user selects at least one category.
		validators.1.config.fieldConf {
			dmail_category.errorCheck.1 = required
		}

		// Pre-select one category (with UID 2), to select multiple categories use this:
		//
		// dmail_category.defaultValue = TEXT
		// dmail_category.defaultValue.value = 1,2
		// dmail_category.defaultValue.separator = ,
		preProcessors.10.class = Tx_Formhandler_PreProcessor_LoadDefaultValues
		preProcessors.10.config {
			1 {
				dmail_category.defaultValue = 2
			}
		}

		// Store the related direct_mail categories the user selected in the database.
		finishers.1.config.finishersNewSubscriber {

			12.class = Tx\FormhandlerSubscription\Finisher\UpdateMmData
			12.config {
				table = sys_dmail_ttaddress_category_mm

				localUid = TEXT
				localUid.data = GP:tx_formhandler_subscription|saveDB|0|uid

				foreignUidsField = dmail_category

				allowedForeignUids = 1,2
			}
		}
	}

	// Configuration for an example form that updates related direct_mail categories.
	formhandler_subscription_update_subscription_directmailcategories < .formhandler_subscription_update_subscription
	formhandler_subscription_update_subscription_directmailcategories {

		name = Subscription update form - direct_mail categories

		templateFile = {$plugin.formhandler_subscription.templatePath}/{$plugin.formhandler_subscription.templateTheme}/DirectMailCategories/UpdateSubscription.html
		langFile.2 = EXT:formhandler_subscription/Resources/Language/DirectMailCategories.xml

		1.checkBoxFields = dmail_category

		// Make sure the user selects at least one category.
		validators.1.config.fieldConf {
			dmail_category.errorCheck.1 = required
		}

		// Load values from the mm table.
		preProcessors.20.class = Tx_Formhandler_PreProcessor_LoadDB
		preProcessors.20.config {

			1 {
				dmail_category.mapping = dmail_category
				dmail_category.separator = ,
			}

			select {
				table = tt_address
				selectFields = tt_address.uid, GROUP_CONCAT(DISTINCT sys_dmail_ttaddress_category_mm.uid_foreign) as dmail_category
				join = sys_dmail_ttaddress_category_mm ON sys_dmail_ttaddress_category_mm.uid_local = tt_address.uid
				where.wrap = sys_dmail_ttaddress_category_mm.uid_local=|
				where.data = GP:tx_formhandler_subscription|uid
				where.intval = 1
				groupBy = sys_dmail_ttaddress_category_mm.uid_local
			}
		}

		// The Tx_FormhandlerSubscription_Finisher_UpdateMmData updates the related mm records.
		finishers.22 < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_request_subscription_directmailcategories.finishers.1.config.finishersNewSubscriber.12
	}

	// Configuration for an example form that removes all relations to direct_mail categories.
	formhandler_subscription_remove_subscription_directmailcategories < .formhandler_subscription_remove_subscription
	formhandler_subscription_remove_subscription_directmailcategories {

		name = Subscription removal - direct_mail categories

		// Make sure the submitted UID matches the UID from the auth code.
		finishers.4.class = Tx\FormhandlerSubscription\Finisher\ValidateAuthCodeUID

		// Use the Tx_FormhandlerSubscription_Finisher_UpdateMmData to remove related mm records.
		finishers.5 < plugin.Tx_Formhandler.settings.predef.formhandler_subscription_request_subscription_directmailcategories.finishers.1.config.finishersNewSubscriber.12
		finishers.5.config {
			localUid.data = GP:tx_formhandler_subscription|uid
			allowedForeignUids =
			deleteAll = 1
		}
	}
}

[globalVar = LIT:1 = {$plugin.formhandler_subscription.updateDatabaseTimestamps}]
plugin.Tx_Formhandler.settings.predef {

	formhandler_subscription_request_subscription.finishers {
		1.config.finishersNewSubscriber.10.config.fields.tstamp.special = sub_tstamp
	}

	formhandler_subscription_request_subscription_directmailcategories.finishers {
		1.config.finishersNewSubscriber.10.config.fields.tstamp.special = sub_tstamp
	}

	formhandler_subscription_update_subscription.finishers {
		20.config.fields.tstamp.special = sub_tstamp
	}

	formhandler_subscription_update_subscription_directmailcategories.finishers {
		20.config.fields.tstamp.special = sub_tstamp
	}

	formhandler_subscription_request_subscription_ajax.finishers {
		1.config.finishersNewSubscriber.10.config.tstamp.special = sub_tstamp
	}
}
[global]
